@model PrisonAdministrationSystem.Models.InmateFormViewModel
@{
    ViewBag.Title = "Create";
}
@{
    PageData["Name"] = string.Format(Model.User.LastName + " " + Model.User.FirstName);
}
<div class="body-header
     ">
    <h2 class="form-header-text">Create</h2>
</div>

<div class="body-form">
   
    @using (Html.BeginForm(Model.Action, "Inmate", FormMethod.Post, new { encType = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(p=>p.Id)
        <div class="form-group">
            @Html.LabelFor(p => p.Cell)
            @Html.DropDownListFor(p => p.Cell, new SelectList(Model.Cells, "Id", "Id"), "Select A Cell", new { @class = "form-select form-width" })
            @Html.ValidationMessageFor(p => p.Cell)
        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.DateOfBirth)
            @Html.TextBoxFor(p => p.DateOfBirth, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.DateOfBirth)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.DateOfIncarceration)
            @Html.TextBoxFor(p => p.DateOfIncarceration, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.DateOfIncarceration)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.TimeOfIncarceration)
            @Html.TextBoxFor(p => p.TimeOfIncarceration, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.TimeOfIncarceration)

        </div>


        <div class="form-group">
            @Html.LabelFor(p => p.FirstName)
            @Html.TextBoxFor(p => p.FirstName, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.FirstName)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.MiddleName)
            @Html.TextBoxFor(p => p.MiddleName, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.MiddleName)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.LastName)
            @Html.TextBoxFor(p => p.LastName, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.LastName)

        </div>
      

        <div class="form-group">
            @Html.LabelFor(p => p.Gender)
            @Html.TextBoxFor(p => p.Gender, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Gender)

        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Height)
            @Html.TextBoxFor(p => p.Height, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Height)

        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Weight)
            @Html.TextBoxFor(p => p.Weight, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Weight)

        </div>
        <div class="form-group">
            @Html.LabelFor(p => p.Complexion)
            @Html.TextBoxFor(p => p.Complexion, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Complexion)

        </div> 
        <div class="form-group">
            @Html.LabelFor(p => p.BirthCity)
            @Html.TextBoxFor(p => p.BirthCity, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.BirthCity)

        </div> 
        
        <div class="form-group">
            @Html.LabelFor(p => p.Nationality)
            @Html.TextBoxFor(p => p.Nationality, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Nationality)

        </div>
        
        <div class="form-group">
            @Html.LabelFor(p => p.IdentificationNumber)
            @Html.TextBoxFor(p => p.IdentificationNumber, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.IdentificationNumber)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.BankVerificationNumber)
            @Html.TextBoxFor(p => p.BankVerificationNumber, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.BankVerificationNumber)

        </div>

        <div class="form-group">
            @Html.LabelFor(p => p.Offense)
            @Html.TextBoxFor(p => p.Offense, new { @class = "form-control form-width" })
            @Html.ValidationMessageFor(p => p.Offense)

        </div>

        <div class="form-floating">
            <div class="form-group">
                @Html.LabelFor(p => p.Sentence)
                @Html.TextBoxFor(p => p.Sentence, new { @class = "form-control form-width", placeholder = "2 years or days or months"  })
                @Html.ValidationMessageFor(p => p.Sentence)
            </div>

        </div>
       

        if (Model.Id == null)
        {


            <div class="form-group">
                @Html.LabelFor(model => model.FrontProfile, new { @class = "form-label" })
                @Html.TextBoxFor(m => m.FrontProfile, new { type = "file", @class = "form-control form-width" })
                @Html.ValidationMessageFor(p => p.FrontProfile)

            </div>


          
            <div class="form-group">

                @Html.LabelFor(model => model.SideProfile)
                @Html.TextBoxFor(m => m.SideProfile, new { type = "file", @class = "form-control form-width" })
                @Html.ValidationMessageFor(p => p.SideProfile)

            </div>
        }
        <div class="form-group">      
            <button type="submit" class="btn btn-primary">Save</button>
        </div>

    }
</div>

@section scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}
